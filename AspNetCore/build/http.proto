syntax = "proto3";
package http;

enum Method {
  GET = 0;
  HEAD = 1;
  POST = 2;
  PUT = 3;
  DELETE = 4;
  OPTIONS = 5;
  TRACE = 6;
  PATCH = 7;
}

enum HeaderName {
  Accept = 0;
  AcceptCharset = 1;
  AcceptEncoding = 2;
  AcceptLanguage = 3;
  AcceptPatch = 4;
  AcceptRanges = 5;
  AccessControlAllowCredentials = 6;
  AccessControlAllowHeaders = 7;
  AccessControlAllowMethods = 8;
  AccessControlAllowOrigin = 9;
  AccessControlExposeHeaders = 10;
  AccessControlMaxAge = 11;
  AccessControlRequestHeaders = 12;
  AccessControlRequestMethod = 13;
  Age = 14;
  Allow = 15;
  AltSvc = 16;
  Authorization = 17;
  CacheControl = 18;
  ClearSiteData = 19;
  ContentDisposition = 20;
  ContentEncoding = 21;
  ContentLanguage = 22;
  ContentLocation = 23;
  ContentRange = 24;
  ContentSecurityPolicy = 25;
  ContentSecurityPolicyReportOnly = 26;
  ContentType = 27;
  Cookie = 28;
  Cookie2 = 29;
  CrossOriginResourcePolicy = 30;
  DNT = 31;
  Date = 32;
  ETag = 33;
  EarlyData = 34;
  Expect = 35;
  ExpectCT = 36;
  Expires = 37;
  FeaturePolicy = 38;
  Forwarded = 39;
  From = 40;
  IfMatch = 41;
  IfModifiedSince = 42;
  IfNoneMatch = 43;
  IfRange = 44;
  IfUnmodifiedSince = 45;
  Index = 46;
  LargeAllocation = 47;
  LastModified = 48;
  Link = 49;
  Location = 50;
  Origin = 51;
  Pragma = 52;
  ProxyAuthenticate = 53;
  ProxyAuthorization = 54;
  PublicKeyPins = 55;
  PublicKeyPinsReportOnly = 56;
  Range = 57;
  Referer = 58;
  ReferrerPolicy = 59;
  RetryAfter = 60;
  SaveData = 61;
  SecWebSocketAccept = 62;
  Server = 63;
  ServerTiming = 64;
  SetCookie = 65;
  SetCookie2 = 66;
  SourceMap = 67;
  StrictTransportSecurity = 68;
  TE = 69;
  TimingAllowOrigin = 70;
  Tk = 71;
  Trailer = 72;
  UpgradeInsecureRequests = 73;
  UserAgent = 74;
  Vary = 75;
  Via = 76;
  WWWAuthenticate = 77;
  Warning = 78;
  XContentTypeOptions = 79;
  XDNSPrefetchControl = 80;
  XForwardedFor = 81;
  XForwardedHost = 82;
  XForwardedProto = 83;
  XFrameOptions = 84;
  XXSSProtection = 85;
}

message SingleValue {
  oneof singlevalue_oneof {
    string string = 1;
    int64 number = 2;
    uint64 date = 3;
  }
}

message QualityValue {
  SingleValue value = 1;
  uint32 quality = 2;
}

message Header {
  HeaderName name = 1;
  repeated QualityValue values = 2;
}

message Request {
  Method method = 1;
  string path = 2;
  string host = 3;
  repeated Header headers = 4;
  bytes body = 5;
}
